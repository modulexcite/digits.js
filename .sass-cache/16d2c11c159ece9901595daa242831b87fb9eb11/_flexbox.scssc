3.2.9 (Media Mark)
08aa70f143bf0c06450046332dcc74011d8172c5
o:Sass::Tree::RootNode
:@template"ß.@import "shared";

// NOTE:
// All mixins for the @box spec have been written assuming they'll be fed property values that
// correspond to the standard spec.  Some mixins can be fed values from the @box spec, but don't
// rely on it.  The `legacy-order` mixin will increment the value fed to it because the @box
// `box-ordinal-group` property begins indexing at 1, while the modern `order` property begins
// indexing at 0.

// ---------------------------------------------------------------------- | @flex

// September 2012 Candidate Recommendation (http://www.w3.org/TR/2012/CR-css3-flexbox-20120918/)
// NOTE: FF did not support wrapping until version ??.  Because the `display: flex` property
// is wrapped in a `@supports (flex-wrap: wrap)` block (when $flex-wrap-required or the $wrap
// argument to the `display-flex` mixin is set to `true`), it will Just Work(TM) when support is
// finally added
// Chrome 21 (prefixed)
// Opera 12.1 (unprefixed)
// Firefox 20 (unprefixed)
$flex-support: not -moz, -webkit, not -ms, not -o, not -khtml !default;

// if `true`, `$flex-legacy-enabled` is treated as false and an `@supports` block is added to 
// the display property to hide the standard value from versions of Firefox that support the
// unprefixed properties, but do not support wrapping
// (this includes suppressing the automatic emittion of @box properties)
$flex-wrap-required : false !default;

// ---------------------------------------------------------------------- | @flexbox

// March 2012 Working Draft (http://www.w3.org/TR/2012/WD-css3-flexbox-20120322/)
// Chrome 17 (prefixed)
// Internet Explorer 10 (prefixed)
$flexbox-support: not -moz, -webkit, -ms, not -o, not -khtml, not standard !default;

// ---------------------------------------------------------------------- | @box

// July 2009 Working Draft (http://www.w3.org/TR/2009/WD-css3-flexbox-20090723/)
// NOTE: no browser that implements this spec is known to support `box-lines: multiple`
// Chrome 4? (prefixed)
// Safari 3.1 (prefixed)
// Firefox <20 (prefixed)
$box-support: -moz, -webkit, not -ms, not -o, not -khtml, not standard !default;

// If `true`, the @box properties will be emitted as part of the normal mixin call
// (if this is false, you're still free to explicitly call the legacy mixins yourself)
$flex-legacy-enabled: false !default;

// ====================================================================================================
//                                                                       | Common
// ====================================================================================================

// function for converting a value from the standard specification to one that is comparable from
// an older specification
@function flex-translate-value($value, $version: box) {
	$value: unquote($value);

	@if $value == flex {
		@return if($version == box, box, flexbox);
	} @else if $value == inline-flex {
		@return if($version == box, inline-box, inline-flexbox);
	} @else if $value == flex-start {
		@return start;
	} @else if $value == flex-end {
		@return end;
	} @else if $value == space-between {
		@return justify;
	} @else if $value == space-around { // @box doesn't have a value equivalent to `space-around`
		@return if($version == box, justify, distribute);
	}
	@return $value;
}

@function flex-support-either() {
	$common: ();
	@for $i from 1 through length($flex-support) {
		$common: append($common, nth($flex-support, $i) or nth($flexbox-support, $i), comma);
	}
	@return $common;
}

// ====================================================================================================
//                                                                       | Display Property
// ====================================================================================================

// $type: flex | inline-flex
@mixin display-flex($type: flex, $wrap: $flex-wrap-required, $legacy: $flex-legacy-enabled) {
	@if $legacy and not $wrap {
		@include legacy-display-flex($type);
	}
	
	@include experimental-value(display, flex-translate-value($type, flexbox), $flexbox-support...);
	
	// if `$wrap` is true, then we need to suppress official support as generated by the `experimental()`
	// mixin so that we can insert it inside an `@supports` block
	$flex-support-standard: true;
	$flex-support-list: $flex-support;
	@if length($flex-support) > 5 {
		$flex-support-standard: nth($flex-support, 6);
		// a `slice()` function would really be handy here...
		$flex-support-list: nth($flex-support, 1), nth($flex-support, 2), nth($flex-support, 3), nth($flex-support, 4), nth($flex-support, 5);
	}
	$flex-support-list: append($flex-support-list, if($wrap, false, $flex-support-standard));
	@include experimental-value(display, $type, $flex-support-list...);
	
	@if $wrap and $flex-support-standard {
		@supports (flex-wrap: wrap) {
			display: $type;
		}
	}
}

@mixin legacy-display-flex($type: flex) {
	@include experimental-value(display, flex-translate-value($type, box), $box-support...);
}

// ====================================================================================================
//                                                                       | Flex Container Properties
// ====================================================================================================

// $value: <'flex-direction'> || <'flex-wrap'>
@mixin flex-flow($value: row nowrap, $wrap: $flex-wrap-required, $legacy: $flex-legacy-enabled) {
	@if $legacy and not $wrap {
		@include legacy-flex-flow($value);
	}
	
	@include experimental(flex-flow, $value, flex-support-either()...);
}

@mixin legacy-flex-flow($value: row nowrap) {
	@if length($value) > 1 { // @box version doesn't have a shorthand
		@include legacy-flex-direction(nth($value, 1));
		@include legacy-flex-wrap(nth($value, 2));
	} @else {
		$value: unquote($value);
		@if $value == row or $value == row-reverse or $value == column or $value == column-reverse {
			@include legacy-flex-direction($value);
		} @else {
			@include legacy-flex-wrap($value);
		}
	}
}

// ----------------------------------------------------------------------

// $value: row | row-reverse | column | column-reverse
@mixin flex-direction($value: row, $wrap: $flex-wrap-required, $legacy: $flex-legacy-enabled) {
	@if $legacy and not $wrap {
		@include legacy-flex-direction($value);
	}
	
	@include experimental(flex-direction, $value, flex-support-either()...);
}

@mixin legacy-flex-direction($value: row) {
	$value: unquote($value);
	@include experimental(box-orient, if($value == row or $value == row-reverse, horizontal, vertical), $box-support...);
	@include experimental(box-direction, if($value == row-reverse or $value == column-reverse, reverse, normal), $box-support...);
}

// ----------------------------------------------------------------------

// $value: nowrap | wrap | wrap-reverse
@mixin flex-wrap($value: nowrap, $wrap: $flex-wrap-required, $legacy: $flex-legacy-enabled) {
	@if $legacy and not $wrap {
		@include legacy-flex-wrap($value);
	}
	
	@include experimental(flex-wrap, $value, flex-support-either()...);
}

@mixin legacy-flex-wrap($value: nowrap) {
	// NOTE: @box has no equivalent of wrap-reverse
	@include experimental(box-lines, if($value == nowrap, single, multiple), $box-support...);
}

// ----------------------------------------------------------------------

// Distributing extra space along the "main axis"
// $value: flex-start | flex-end | center | space-between | space-around
@mixin justify-content($value: flex-start, $wrap: $flex-wrap-required, $legacy: $flex-legacy-enabled) {
	@if $legacy and not $wrap {
		@include legacy-justify-content($value);
	}
	
	@include experimental(flex-pack, flex-translate-value($value, flexbox), $flexbox-support...);
	@include experimental(justify-content, $value, $flex-support...);
}

@mixin legacy-justify-content($value: flex-start) {
	@include experimental(box-pack, flex-translate-value($value, box), $box-support...);
}

// ----------------------------------------------------------------------

// Distributing extra space along the "cross axis"
// $value: flex-start | flex-end | center | space-between | space-around | stretch
@mixin align-content($value: flex-start, $wrap: $flex-wrap-required, $legacy: $flex-legacy-enabled) {
	@if $legacy and not $wrap {
		@include legacy-align-content($value);
	}
	
	@include experimental(flex-line-pack, flex-translate-value($value, flexbox), $flexbox-support...);
	@include experimental(align-content, $value, $flex-support...);
}

@mixin legacy-align-content($value: flex-start) {
	@include experimental(box-align, flex-translate-value($value, box), $box-support...);
}

// ----------------------------------------------------------------------

// Align items along the "cross axis"
// $value: flex-start | flex-end | center | baseline | stretch
@mixin align-items($value: stretch) { // the flex container
	// There is no @box version of this property
	@include experimental(flex-align, flex-translate-value($value, flexbox), $flexbox-support...);
	@include experimental(align-items, $value, $flex-support...);
}

// ====================================================================================================
//                                                                       | Flex Item Properties
// ====================================================================================================

// $value: none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]
@mixin flex($value: 0 1 auto, $wrap: $flex-wrap-required, $legacy: $flex-legacy-enabled) {
	$value: unquote($value);
	@if $legacy and unitless(nth($value, 1)) {
		// @box version does not have a shorthand, see `legacy-flex-grow`
		@include legacy-flex-grow(nth($value, 1));
	}
	
	@include experimental(flex, $value, flex-support-either()...);
}

// ----------------------------------------------------------------------

// $value: Integer
@mixin flex-grow($value: 0, $wrap: $flex-wrap-required, $legacy: $flex-legacy-enabled) {
	@if $legacy and not $wrap {
		@include legacy-flex-grow($value);
	}
	
	// There is no @flexbox version of this property
	@include experimental(flex-grow, $value, $flex-support...);
}

@mixin legacy-flex-grow($value: 0) {
	@include experimental(box-flex, $value, $box-support...);
}

// ----------------------------------------------------------------------

// $value: Integer
@mixin flex-shrink($value: 1) {
	// There is no @box version of this property
	// There is no @flexbox version of this property
	@include experimental(flex-shrink, $value, $flex-support...);
}

// ----------------------------------------------------------------------

// $value: united number (eg: 100px)
@mixin flex-basis($value: auto) {
	// There is no @box version of this property
	// There is no @flexbox version of this property
	@include experimental(flex-basis, $value, $flex-support...);
}

// ----------------------------------------------------------------------

// Align items along the "cross axis" -- overrides `align-items` value on individual items
// $value: auto | flex-start | flex-end | center | baseline | stretch
@mixin align-self($value: auto) { // children of flex containers
	// There is no @box version of this property
	@include experimental(flex-item-align, flex-translate-value($value, flexbox), $flexbox-support...);
	@include experimental(align-self, $value, $flex-support...);
}

// ----------------------------------------------------------------------

// $value: Integer
@mixin order($value: 0, $wrap: $flex-wrap-required, $legacy: $flex-legacy-enabled) {
	@if $legacy and not $wrap {
		@include legacy-order($value);
	}
	
	@include experimental(flex-order, $value, $flexbox-support...);
	@include experimental(order, $value, $flex-support...);
}

@mixin legacy-order($value: 0) {
	// the @box spec starts the ordering at 1 instead of 0 like the modern specs
	@include experimental(box-ordinal-group, $value + 1, $box-support...);
}
:@options{ :@has_childrenT:@children[Go:Sass::Tree::ImportNode;0;@:@imported_file0;	[ :@imported_filename"shared:
@lineio:Sass::Tree::CommentNode
;@:@value["/* NOTE:
 * All mixins for the @box spec have been written assuming they'll be fed property values that
 * correspond to the standard spec.  Some mixins can be fed values from the @box spec, but don't
 * rely on it.  The `legacy-order` mixin will increment the value fed to it because the @box
 * `box-ordinal-group` property begins indexing at 1, while the modern `order` property begins
 * indexing at 0. */:
@type:silent;	[ ;io;
;@;["Y/* ---------------------------------------------------------------------- | @flex */;;;	[ ;io;
;@;["Þ/* September 2012 Candidate Recommendation (http://www.w3.org/TR/2012/CR-css3-flexbox-20120918/)
 * NOTE: FF did not support wrapping until version ??.  Because the `display: flex` property
 * is wrapped in a `@supports (flex-wrap: wrap)` block (when $flex-wrap-required or the $wrap
 * argument to the `display-flex` mixin is set to `true`), it will Just Work(TM) when support is
 * finally added
 * Chrome 21 (prefixed)
 * Opera 12.1 (unprefixed)
 * Firefox 20 (unprefixed) */;;;	[ ;io:Sass::Tree::VariableNode:@guarded"!default;@:
@name"flex-support:
@expro:Sass::Script::List	:@separator:
comma;@;[
o:!Sass::Script::UnaryOperation	:@operator:not;@:@operando:Sass::Script::String	;@;"	-moz;:identifier;i;io;	;@;"-webkit;;;io;	;;;@;o;	;@;"-ms;;;i;io;	;;;@;o;	;@;"-o;;;i;io;	;;;@;o;	;@;"-khtml;;;i;i;i;	[ ;io;
;@;["=/* if `true`, `$flex-legacy-enabled` is treated as false and an `@supports` block is added to 
 * the display property to hide the standard value from versions of Firefox that support the
 * unprefixed properties, but do not support wrapping
 * (this includes suppressing the automatic emittion of @box properties) */;;;	[ ;io;;"!default;@;"flex-wrap-required;o:Sass::Script::Bool;@;F;i;	[ ;io;
;@;["\/* ---------------------------------------------------------------------- | @flexbox */;;;	[ ;i!o;
;@;["/* March 2012 Working Draft (http://www.w3.org/TR/2012/WD-css3-flexbox-20120322/)
 * Chrome 17 (prefixed)
 * Internet Explorer 10 (prefixed) */;;;	[ ;i#o;;"!default;@;"flexbox-support;o;	;;;@;[o;	;;;@;o;	;@;"	-moz;;;i&;i&o;	;@;"-webkit;;;i&o;	;@;"-ms;;;i&o;	;;;@;o;	;@;"-o;;;i&;i&o;	;;;@;o;	;@;"-khtml;;;i&;i&o;	;;;@;o;	;@;"standard;;;i&;i&;i&;	[ ;i&o;
;@;["X/* ---------------------------------------------------------------------- | @box */;;;	[ ;i(o;
;@;["ö/* July 2009 Working Draft (http://www.w3.org/TR/2009/WD-css3-flexbox-20090723/)
 * NOTE: no browser that implements this spec is known to support `box-lines: multiple`
 * Chrome 4? (prefixed)
 * Safari 3.1 (prefixed)
 * Firefox <20 (prefixed) */;;;	[ ;i*o;;"!default;@;"box-support;o;	;;;@;[o;	;@;"	-moz;;;i/o;	;@;"-webkit;;;i/o;	;;;@;o;	;@;"-ms;;;i/;i/o;	;;;@;o;	;@;"-o;;;i/;i/o;	;;;@;o;	;@;"-khtml;;;i/;i/o;	;;;@;o;	;@;"standard;;;i/;i/;i/;	[ ;i/o;
;@;["¬/* If `true`, the @box properties will be emitted as part of the normal mixin call
 * (if this is false, you're still free to explicitly call the legacy mixins yourself) */;;;	[ ;i1o;;"!default;@;"flex-legacy-enabled;o;;@;F;i3;	[ ;i3o;
;@;["$/* ====================================================================================================
 *                                                                       | Common
 * ==================================================================================================== */;;;	[ ;i5o;
;@;["~/* function for converting a value from the standard specification to one that is comparable from
 * an older specification */;;;	[ ;i9o:Sass::Tree::FunctionNode;@;"flex-translate-value:@splat0;T;	[o;;0;@;"
value;o:Sass::Script::Funcall:@keywords{ ;@;"unquote;!0:
@args[o:Sass::Script::Variable	;@;"
value:@underscored_name"
value;i<;i<;	[ ;i<u:Sass::Tree::IfNodee
[o:Sass::Script::Operation
:@operator:eq:@operand2o:Sass::Script::String	:@options{ :@value"	flex:
@type:identifier:
@linei>;
@:@operand1o:Sass::Script::Variable	;
@:
@name"
value:@underscored_name"
value;i>;i>u:Sass::Tree::IfNodel[o:Sass::Script::Operation
:@operator:eq:@operand2o:Sass::Script::String	:@options{ :@value"inline-flex:
@type:identifier:
@linei@;
@:@operand1o:Sass::Script::Variable	;
@:
@name"
value:@underscored_name"
value;i@;i@u:Sass::Tree::IfNode^[o:Sass::Script::Operation
:@operator:eq:@operand2o:Sass::Script::String	:@options{ :@value"flex-start:
@type:identifier:
@lineiB;
@:@operand1o:Sass::Script::Variable	;
@:
@name"
value:@underscored_name"
value;iB;iBu:Sass::Tree::IfNode[o:Sass::Script::Operation
:@operator:eq:@operand2o:Sass::Script::String	:@options{ :@value"flex-end:
@type:identifier:
@lineiD;
@:@operand1o:Sass::Script::Variable	;
@:
@name"
value:@underscored_name"
value;iD;iDu:Sass::Tree::IfNode¼[o:Sass::Script::Operation
:@operator:eq:@operand2o:Sass::Script::String	:@options{ :@value"space-between:
@type:identifier:
@lineiF;
@:@operand1o:Sass::Script::Variable	;
@:
@name"
value:@underscored_name"
value;iF;iFu:Sass::Tree::IfNoded[o:Sass::Script::Operation
:@operator:eq:@operand2o:Sass::Script::String	:@options{ :@value"space-around:
@type:identifier:
@lineiH;
@:@operand1o:Sass::Script::Variable	;
@:
@name"
value:@underscored_name"
value;iH;iH0[o:Sass::Tree::CommentNode
;
@;["A/* @box doesn't have a value equivalent to `space-around` */;:silent:@children[ ;iHo:Sass::Tree::ReturnNode	;
@:
@expro:Sass::Script::Funcall:@keywords{ ;
@;"if:@splat0:
@args[o; 
;;;o;		;
@;"box;;;iI;
@;o;	;
@;"version;"version;iI;iIo;		;
@;"justify;;;iIo;		;
@;"distribute;;;iI;iI;[ ;iI[o:Sass::Tree::ReturnNode	;
@:
@expro;		;
@;"justify;;;iG:@children[ ;iG[o:Sass::Tree::ReturnNode	;
@:
@expro;		;
@;"end;;;iE:@children[ ;iE[o:Sass::Tree::ReturnNode	;
@:
@expro;		;
@;"
start;;;iC:@children[ ;iC[o:Sass::Tree::ReturnNode	;
@:
@expro:Sass::Script::Funcall:@keywords{ ;
@;"if:@splat0:
@args[o; 
;;;o;		;
@;"box;;;iA;
@;o;	;
@;"version;"version;iA;iAo;		;
@;"inline-box;;;iAo;		;
@;"inline-flexbox;;;iA;iA:@children[ ;iA[o:Sass::Tree::ReturnNode	;
@:
@expro:Sass::Script::Funcall:@keywords{ ;
@;"if:@splat0:
@args[o; 
;;;o;		;
@;"box;;;i?;
@;o;	;
@;"version;"version;i?;i?o;		;
@;"box;;;i?o;		;
@;"flexbox;;;i?;i?:@children[ ;i?o:Sass::Tree::ReturnNode	;@;o;%	;@;"
value;&"
value;iK;	[ ;iK;$[[o;%;@;"
value;&"
value0[o;%;@;"version;&"versiono;	;@;"box;;;i;;i;o; ;@;"flex-support-either;!0;T;	[o;;0;@;"common;o;	;:
space;@;[ ;iO;	[ ;iOo:Sass::Tree::ForNode:	@var"i;@:@too;";#{ ;@;"length;!0;$[o;%	;@;"flex-support;&"flex_support;iP;iP:@exclusiveF;T;	[o;;0;@;"common;o;";#{ ;@;"append;!0;$[o;%	;@;"common;&"common;iQo:Sass::Script::Operation
;:or:@operand2o;";#{ ;@;"nth;!0;$[o;%	;@;"flexbox-support;&"flexbox_support;iQo;%	;@;"i;&"i;iQ;iQ;@:@operand1o;";#{ ;@;"nth;!0;$[o;%	;@;"flex-support;&"flex_support;iQo;%	;@;"i;&"i;iQ;iQ;iQo;	;@;"
comma;;;iQ;iQ;	[ ;iQ;iP:
@fromo:Sass::Script::Number;@:@denominator_units[ ;i:@numerator_units[ :@original"1;iPo;(	;@;o;%	;@;"common;&"common;iS;	[ ;iS;$[ ;iNo;
;@;["./* ====================================================================================================
 *                                                                       | Display Property
 * ==================================================================================================== */;;;	[ ;iVo;
;@;["$/* $type: flex | inline-flex */;;;	[ ;iZo:Sass::Tree::MixinDefNode;@;"display-flex;!0;T;	[u;'~[o:Sass::Script::Operation
:@operator:and:@operand2o:!Sass::Script::UnaryOperation	;:not:@options{ :@operando:Sass::Script::Variable	;@:
@name"	wrap:@underscored_name"	wrap:
@linei\;i\;@:@operand1o;	;@;"legacy;"legacy;i\;i\0[o:Sass::Tree::MixinNode:@keywords{ ;@;"legacy-display-flex:@splat0:@children[ :
@args[o;	;@;"	type;"	type;i];i]o:Sass::Tree::MixinNode;#{ ;@;"experimental-value;!o;%	;{ ;"flexbox-support;&"flexbox_support;i`;	[ ;$[o;	;@;"display;;;i`o;";#{ ;@;"flex-translate-value;!0;$[o;%	;@;"	type;&"	type;i`o;	;@;"flexbox;;;i`;i`;i`o;
;@;["¦/* if `$wrap` is true, then we need to suppress official support as generated by the `experimental()`
 * mixin so that we can insert it inside an `@supports` block */;;;	[ ;ibo;;0;@;"flex-support-standard;o;;@;T;id;	[ ;ido;;0;@;"flex-support-list;o;%	;@;"flex-support;&"flex_support;ie;	[ ;ieu;'ù[o:Sass::Script::Operation
:@operator:gt:@operand2o:Sass::Script::Number:@options{ :@denominator_units[ :@valuei
:@numerator_units[ :@original"5:
@lineif;
@:@operand1o:Sass::Script::Funcall:@keywords{ ;
@:
@name"length:@splat0:
@args[o:Sass::Script::Variable	;
@;"flex-support:@underscored_name"flex_support;if;if;if0[o:Sass::Tree::VariableNode:@guarded0;
@;"flex-support-standard:
@expro;;{ ;
@;"nth;0;[o;	;
@;"flex-support;"flex_support;igo;	;
@;@	;i;[ ;"6;ig;ig:@children[ ;igo:Sass::Tree::CommentNode
;
@;["=/* a `slice()` function would really be handy here... */:
@type:silent;[ ;iho;;0;
@;"flex-support-list;o:Sass::Script::List	:@separator:
comma;
@;[
o;;{ ;
@;"nth;0;[o;	;
@;"flex-support;"flex_support;iio;	;
@;@	;i;[ ;"1;ii;iio;;{ ;
@;"nth;0;[o;	;
@;"flex-support;"flex_support;iio;	;
@;@	;i;[ ;"2;ii;iio;;{ ;
@;"nth;0;[o;	;
@;"flex-support;"flex_support;iio;	;
@;@	;i;[ ;"3;ii;iio;;{ ;
@;"nth;0;[o;	;
@;"flex-support;"flex_support;iio;	;
@;@	;i	;[ ;"4;ii;iio;;{ ;
@;"nth;0;[o;	;
@;"flex-support;"flex_support;iio;	;
@;@	;i
;[ ;"5;ii;ii;ii;[ ;iio;;0;@;"flex-support-list;o;";#{ ;@;"append;!0;$[o;%	;@;"flex-support-list;&"flex_support_list;iko;";#{ ;@;"if;!0;$[o;%	;@;"	wrap;&"	wrap;iko;;@;F;iko;%	;@;"flex-support-standard;&"flex_support_standard;ik;ik;ik;	[ ;iko;8;#{ ;@;"experimental-value;!o;%	;{ ;"flex-support-list;&"flex_support_list;il;	[ ;$[o;	;@;"display;;;ilo;%	;@;"	type;&"	type;il;ilu;'0[o:Sass::Script::Operation
:@operator:and:@operand2o:Sass::Script::Variable	:@options{ :
@name"flex-support-standard:@underscored_name"flex_support_standard:
@linein;
@:@operand1o;		;
@;"	wrap;"	wrap;in;in0[o:Sass::Tree::SupportsNode:
@tabsi ;
@;"supports:@value" :@conditiono: Sass::Supports::Declaration;o:Sass::Script::String	;
@;"flex-wrap:
@type:identifier;io;o;	;
@;"	wrap;;;io:@has_childrenT:@children[o:Sass::Tree::PropNode;i ;
@;["display:@prop_syntax:new;o;		;
@;"	type;"	type;ip;[ ;ip;io;$[[o;%;@;"	type;&"	typeo;	;@;"	flex;;;i[[o;%;@;"	wrap;&"	wrapo;%	;@;"flex-wrap-required;&"flex_wrap_required;i[[o;%;@;"legacy;&"legacyo;%	;@;"flex-legacy-enabled;&"flex_legacy_enabled;i[;i[o;7;@;"legacy-display-flex;!0;T;	[o;8;#{ ;@;"experimental-value;!o;%	;{ ;"box-support;&"box_support;iv;	[ ;$[o;	;@;"display;;;ivo;";#{ ;@;"flex-translate-value;!0;$[o;%	;@;"	type;&"	type;ivo;	;@;"box;;;iv;iv;iv;$[[o;%;@;"	type;&"	typeo;	;@;"	flex;;;iu;iuo;
;@;["7/* ====================================================================================================
 *                                                                       | Flex Container Properties
 * ==================================================================================================== */;;;	[ ;iyo;
;@;["6/* $value: <'flex-direction'> || <'flex-wrap'> */;;;	[ ;i}o;7;@;"flex-flow;!0;T;	[u;'[o:Sass::Script::Operation
:@operator:and:@operand2o:!Sass::Script::UnaryOperation	;:not:@options{ :@operando:Sass::Script::Variable	;@:
@name"	wrap:@underscored_name"	wrap:
@linei;i;@:@operand1o;	;@;"legacy;"legacy;i;i0[o:Sass::Tree::MixinNode:@keywords{ ;@;"legacy-flex-flow:@splat0:@children[ :
@args[o;	;@;"
value;"
value;i{;i{o;8;#{ ;@;"experimental;!o;";#{ ;{ ;"flex-support-either;!0;$[ ;i~;	[ ;$[o;	;@;"flex-flow;;;i~o;%	;@;"
value;&"
value;i~;i~;$[[o;%;@;"
value;&"
valueo;	;;);@;[o;	;@;"row;;;i~o;	;@;"nowrap;;;i~;i~[o;%;@;"	wrap;&"	wrapo;%	;@;"flex-wrap-required;&"flex_wrap_required;i~[o;%;@;"legacy;&"legacyo;%	;@;"flex-legacy-enabled;&"flex_legacy_enabled;i~;i~o;7;@;"legacy-flex-flow;!0;T;	[u;'£[o:Sass::Script::Operation
:@operator:gt:@operand2o:Sass::Script::Number:@options{ :@denominator_units[ :@valuei:@numerator_units[ :@original"1:
@linei;
@:@operand1o:Sass::Script::Funcall:@keywords{ ;
@:
@name"length:@splat0:
@args[o:Sass::Script::Variable	;
@;"
value:@underscored_name"
value;i;i;iu:Sass::Tree::IfNode[00[o:Sass::Tree::VariableNode:@guarded0:@options{ :
@name"
value:
@expro:Sass::Script::Funcall:@keywords{ ;@;"unquote:@splat0:
@args[o:Sass::Script::Variable	;@;"
value:@underscored_name"
value:
@linei;i:@children[ ;iu:Sass::Tree::IfNode[o:Sass::Script::Operation
:@operator:or:@operand2o; 
;:eq;o:Sass::Script::String	:@options{ :@value"column-reverse:
@type:identifier:
@linei;@	:@operand1o:Sass::Script::Variable	;@	:
@name"
value:@underscored_name"
value;i;i;@	;o; 
;;;o; 
;;	;o;
	;@	;"column;;;i;@	;o;	;@	;"
value;"
value;i;i;@	;o; 
;;;o; 
;;	;o;
	;@	;"row-reverse;;;i;@	;o;	;@	;"
value;"
value;i;i;@	;o; 
;;	;o;
	;@	;"row;;;i;@	;o;	;@	;"
value;"
value;i;i;i;i;iu:Sass::Tree::IfNodeÂ[00[o:Sass::Tree::MixinNode:@keywords{ :@options{ :
@name"legacy-flex-wrap:@splat0:@children[ :
@args[o:Sass::Script::Variable	;@	;"
value:@underscored_name"
value:
@linei;i[o:Sass::Tree::MixinNode:@keywords{ ;@	;"legacy-flex-direction:@splat0:@children[ :
@args[o;	;@	;"
value;"
value;i;i[o:Sass::Tree::CommentNode
;
@;["0/* @box version doesn't have a shorthand */:
@type:silent:@children[ ;io:Sass::Tree::MixinNode;{ ;
@;"legacy-flex-direction;0;[ ;[o;;{ ;
@;"nth;0;[o;	;
@;"
value;"
value;io;	;
@;@	;i;[ ;"1;i;i;io;;{ ;
@;"legacy-flex-wrap;0;[ ;[o;;{ ;
@;"nth;0;[o;	;
@;"
value;"
value;io;	;
@;@	;i;[ ;"2;i;i;i;$[[o;%;@;"
value;&"
valueo;	;;);@;[o;	;@;"row;;;io;	;@;"nowrap;;;i;i;io;
;@;["Q/* ---------------------------------------------------------------------- */;;;	[ ;io;
;@;[">/* $value: row | row-reverse | column | column-reverse */;;;	[ ;io;7;@;"flex-direction;!0;T;	[u;'[o:Sass::Script::Operation
:@operator:and:@operand2o:!Sass::Script::UnaryOperation	;:not:@options{ :@operando:Sass::Script::Variable	;@:
@name"	wrap:@underscored_name"	wrap:
@linei;i;@:@operand1o;	;@;"legacy;"legacy;i;i0[o:Sass::Tree::MixinNode:@keywords{ ;@;"legacy-flex-direction:@splat0:@children[ :
@args[o;	;@;"
value;"
value;i;io;8;#{ ;@;"experimental;!o;";#{ ;{ ;"flex-support-either;!0;$[ ;i;	[ ;$[o;	;@;"flex-direction;;;io;%	;@;"
value;&"
value;i;i;$[[o;%;@;"
value;&"
valueo;	;@;"row;;;i[o;%;@;"	wrap;&"	wrapo;%	;@;"flex-wrap-required;&"flex_wrap_required;i[o;%;@;"legacy;&"legacyo;%	;@;"flex-legacy-enabled;&"flex_legacy_enabled;i;io;7;@;"legacy-flex-direction;!0;T;	[o;;0;@;"
value;o;";#{ ;@;"unquote;!0;$[o;%	;@;"
value;&"
value;i;i;	[ ;io;8;#{ ;@;"experimental;!o;%	;{ ;"box-support;&"box_support;i;	[ ;$[o;	;@;"box-orient;;;io;";#{ ;@;"if;!0;$[o;.
;;/;0o;.
;:eq;0o;	;@;"row-reverse;;;i;@;1o;%	;@;"
value;&"
value;i;i;@;1o;.
;;9;0o;	;@;"row;;;i;@;1o;%	;@;"
value;&"
value;i;i;io;	;@;"horizontal;;;io;	;@;"vertical;;;i;i;io;8;#{ ;@;"experimental;!o;%	;{ ;"box-support;&"box_support;i;	[ ;$[o;	;@;"box-direction;;;io;";#{ ;@;"if;!0;$[o;.
;;/;0o;.
;;9;0o;	;@;"column-reverse;;;i;@;1o;%	;@;"
value;&"
value;i;i;@;1o;.
;;9;0o;	;@;"row-reverse;;;i;@;1o;%	;@;"
value;&"
value;i;i;io;	;@;"reverse;;;io;	;@;"normal;;;i;i;i;$[[o;%;@;"
value;&"
valueo;	;@;"row;;;i;io;
;@;["Q/* ---------------------------------------------------------------------- */;;;	[ ;i o;
;@;["//* $value: nowrap | wrap | wrap-reverse */;;;	[ ;i¢o;7;@;"flex-wrap;!0;T;	[u;'[o:Sass::Script::Operation
:@operator:and:@operand2o:!Sass::Script::UnaryOperation	;:not:@options{ :@operando:Sass::Script::Variable	;@:
@name"	wrap:@underscored_name"	wrap:
@linei¤;i¤;@:@operand1o;	;@;"legacy;"legacy;i¤;i¤0[o:Sass::Tree::MixinNode:@keywords{ ;@;"legacy-flex-wrap:@splat0:@children[ :
@args[o;	;@;"
value;"
value;i¥;i¥o;8;#{ ;@;"experimental;!o;";#{ ;{ ;"flex-support-either;!0;$[ ;i¨;	[ ;$[o;	;@;"flex-wrap;;;i¨o;%	;@;"
value;&"
value;i¨;i¨;$[[o;%;@;"
value;&"
valueo;	;@;"nowrap;;;i£[o;%;@;"	wrap;&"	wrapo;%	;@;"flex-wrap-required;&"flex_wrap_required;i£[o;%;@;"legacy;&"legacyo;%	;@;"flex-legacy-enabled;&"flex_legacy_enabled;i£;i£o;7;@;"legacy-flex-wrap;!0;T;	[o;
;@;["7/* NOTE: @box has no equivalent of wrap-reverse */;;;	[ ;i¬o;8;#{ ;@;"experimental;!o;%	;{ ;"box-support;&"box_support;i­;	[ ;$[o;	;@;"box-lines;;;i­o;";#{ ;@;"if;!0;$[o;.
;;9;0o;	;@;"nowrap;;;i­;@;1o;%	;@;"
value;&"
value;i­;i­o;	;@;"single;;;i­o;	;@;"multiple;;;i­;i­;i­;$[[o;%;@;"
value;&"
valueo;	;@;"nowrap;;;i«;i«o;
;@;["Q/* ---------------------------------------------------------------------- */;;;	[ ;i°o;
;@;["}/* Distributing extra space along the "main axis"
 * $value: flex-start | flex-end | center | space-between | space-around */;;;	[ ;i²o;7;@;"justify-content;!0;T;	[u;'[o:Sass::Script::Operation
:@operator:and:@operand2o:!Sass::Script::UnaryOperation	;:not:@options{ :@operando:Sass::Script::Variable	;@:
@name"	wrap:@underscored_name"	wrap:
@lineiµ;iµ;@:@operand1o;	;@;"legacy;"legacy;iµ;iµ0[o:Sass::Tree::MixinNode:@keywords{ ;@;"legacy-justify-content:@splat0:@children[ :
@args[o;	;@;"
value;"
value;i¶;i¶o;8;#{ ;@;"experimental;!o;%	;{ ;"flexbox-support;&"flexbox_support;i¹;	[ ;$[o;	;@;"flex-pack;;;i¹o;";#{ ;@;"flex-translate-value;!0;$[o;%	;@;"
value;&"
value;i¹o;	;@;"flexbox;;;i¹;i¹;i¹o;8;#{ ;@;"experimental;!o;%	;{ ;"flex-support;&"flex_support;iº;	[ ;$[o;	;@;"justify-content;;;iºo;%	;@;"
value;&"
value;iº;iº;$[[o;%;@;"
value;&"
valueo;	;@;"flex-start;;;i´[o;%;@;"	wrap;&"	wrapo;%	;@;"flex-wrap-required;&"flex_wrap_required;i´[o;%;@;"legacy;&"legacyo;%	;@;"flex-legacy-enabled;&"flex_legacy_enabled;i´;i´o;7;@;"legacy-justify-content;!0;T;	[o;8;#{ ;@;"experimental;!o;%	;{ ;"box-support;&"box_support;i¾;	[ ;$[o;	;@;"box-pack;;;i¾o;";#{ ;@;"flex-translate-value;!0;$[o;%	;@;"
value;&"
value;i¾o;	;@;"box;;;i¾;i¾;i¾;$[[o;%;@;"
value;&"
valueo;	;@;"flex-start;;;i½;i½o;
;@;["Q/* ---------------------------------------------------------------------- */;;;	[ ;iÁo;
;@;["/* Distributing extra space along the "cross axis"
 * $value: flex-start | flex-end | center | space-between | space-around | stretch */;;;	[ ;iÃo;7;@;"align-content;!0;T;	[u;'[o:Sass::Script::Operation
:@operator:and:@operand2o:!Sass::Script::UnaryOperation	;:not:@options{ :@operando:Sass::Script::Variable	;@:
@name"	wrap:@underscored_name"	wrap:
@lineiÆ;iÆ;@:@operand1o;	;@;"legacy;"legacy;iÆ;iÆ0[o:Sass::Tree::MixinNode:@keywords{ ;@;"legacy-align-content:@splat0:@children[ :
@args[o;	;@;"
value;"
value;iÇ;iÇo;8;#{ ;@;"experimental;!o;%	;{ ;"flexbox-support;&"flexbox_support;iÊ;	[ ;$[o;	;@;"flex-line-pack;;;iÊo;";#{ ;@;"flex-translate-value;!0;$[o;%	;@;"
value;&"
value;iÊo;	;@;"flexbox;;;iÊ;iÊ;iÊo;8;#{ ;@;"experimental;!o;%	;{ ;"flex-support;&"flex_support;iË;	[ ;$[o;	;@;"align-content;;;iËo;%	;@;"
value;&"
value;iË;iË;$[[o;%;@;"
value;&"
valueo;	;@;"flex-start;;;iÅ[o;%;@;"	wrap;&"	wrapo;%	;@;"flex-wrap-required;&"flex_wrap_required;iÅ[o;%;@;"legacy;&"legacyo;%	;@;"flex-legacy-enabled;&"flex_legacy_enabled;iÅ;iÅo;7;@;"legacy-align-content;!0;T;	[o;8;#{ ;@;"experimental;!o;%	;{ ;"box-support;&"box_support;iÏ;	[ ;$[o;	;@;"box-align;;;iÏo;";#{ ;@;"flex-translate-value;!0;$[o;%	;@;"
value;&"
value;iÏo;	;@;"box;;;iÏ;iÏ;iÏ;$[[o;%;@;"
value;&"
valueo;	;@;"flex-start;;;iÎ;iÎo;
;@;["Q/* ---------------------------------------------------------------------- */;;;	[ ;iÒo;
;@;["l/* Align items along the "cross axis"
 * $value: flex-start | flex-end | center | baseline | stretch */;;;	[ ;iÔo;7;@;"align-items;!0;T;	[o;
;@;["J/* the flex container
 * There is no @box version of this property */;;;	[ ;iÖo;8;#{ ;@;"experimental;!o;%	;{ ;"flexbox-support;&"flexbox_support;iØ;	[ ;$[o;	;@;"flex-align;;;iØo;";#{ ;@;"flex-translate-value;!0;$[o;%	;@;"
value;&"
value;iØo;	;@;"flexbox;;;iØ;iØ;iØo;8;#{ ;@;"experimental;!o;%	;{ ;"flex-support;&"flex_support;iÙ;	[ ;$[o;	;@;"align-items;;;iÙo;%	;@;"
value;&"
value;iÙ;iÙ;$[[o;%;@;"
value;&"
valueo;	;@;"stretch;;;iÖ;iÖo;
;@;["2/* ====================================================================================================
 *                                                                       | Flex Item Properties
 * ==================================================================================================== */;;;	[ ;iÜo;
;@;["N/* $value: none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ] */;;;	[ ;iào;7;@;"	flex;!0;T;	[o;;0;@;"
value;o;";#{ ;@;"unquote;!0;$[o;%	;@;"
value;&"
value;iâ;iâ;	[ ;iâu;'Ä[o:Sass::Script::Operation
:@operator:and:@operand2o:Sass::Script::Funcall:@keywords{ :@options{ :
@name"unitless:@splat0:
@args[o;	;
{ ;@	;"nth;0;[o:Sass::Script::Variable	;@	;"
value:@underscored_name"
value:
@lineião:Sass::Script::Number;@	:@denominator_units[ :@valuei:@numerator_units[ :@original"1;iã;iã;iã;@	:@operand1o;	;@	;"legacy;"legacy;iã;iã0[o:Sass::Tree::CommentNode
;@	;["I/* @box version does not have a shorthand, see `legacy-flex-grow` */:
@type:silent:@children[ ;iäo:Sass::Tree::MixinNode;
{ ;@	;"legacy-flex-grow;0;[ ;[o;	;
{ ;@	;"nth;0;[o;	;@	;"
value;"
value;iåo;;@	;@;i;[ ;"1;iå;iå;iåo;8;#{ ;@;"experimental;!o;";#{ ;{ ;"flex-support-either;!0;$[ ;iè;	[ ;$[o;	;@;"	flex;;;ièo;%	;@;"
value;&"
value;iè;iè;$[[o;%;@;"
value;&"
valueo;	;;);@;[o;3;@;4@Ï;i ;5[ ;6"0;iáo;3;@;4@Ï;i;5[ ;6"1;iáo;	;@;"	auto;;;iá;iá[o;%;@;"	wrap;&"	wrapo;%	;@;"flex-wrap-required;&"flex_wrap_required;iá[o;%;@;"legacy;&"legacyo;%	;@;"flex-legacy-enabled;&"flex_legacy_enabled;iá;iáo;
;@;["Q/* ---------------------------------------------------------------------- */;;;	[ ;iëo;
;@;["/* $value: Integer */;;;	[ ;iío;7;@;"flex-grow;!0;T;	[u;'[o:Sass::Script::Operation
:@operator:and:@operand2o:!Sass::Script::UnaryOperation	;:not:@options{ :@operando:Sass::Script::Variable	;@:
@name"	wrap:@underscored_name"	wrap:
@lineiï;iï;@:@operand1o;	;@;"legacy;"legacy;iï;iï0[o:Sass::Tree::MixinNode:@keywords{ ;@;"legacy-flex-grow:@splat0:@children[ :
@args[o;	;@;"
value;"
value;ið;iðo;
;@;["8/* There is no @flexbox version of this property */;;;	[ ;ióo;8;#{ ;@;"experimental;!o;%	;{ ;"flex-support;&"flex_support;iô;	[ ;$[o;	;@;"flex-grow;;;iôo;%	;@;"
value;&"
value;iô;iô;$[[o;%;@;"
value;&"
valueo;3;@;4@Ï;i ;5[ ;6"0;iî[o;%;@;"	wrap;&"	wrapo;%	;@;"flex-wrap-required;&"flex_wrap_required;iî[o;%;@;"legacy;&"legacyo;%	;@;"flex-legacy-enabled;&"flex_legacy_enabled;iî;iîo;7;@;"legacy-flex-grow;!0;T;	[o;8;#{ ;@;"experimental;!o;%	;{ ;"box-support;&"box_support;iø;	[ ;$[o;	;@;"box-flex;;;iøo;%	;@;"
value;&"
value;iø;iø;$[[o;%;@;"
value;&"
valueo;3;@;4@Ï;i ;5[ ;6"0;i÷;i÷o;
;@;["Q/* ---------------------------------------------------------------------- */;;;	[ ;iûo;
;@;["/* $value: Integer */;;;	[ ;iýo;7;@;"flex-shrink;!0;T;	[o;
;@;["e/* There is no @box version of this property
 * There is no @flexbox version of this property */;;;	[ ;iÿo;8;#{ ;@;"experimental;!o;%	;{ ;"flex-support;&"flex_support;i;	[ ;$[o;	;@;"flex-shrink;;;io;%	;@;"
value;&"
value;i;i;$[[o;%;@;"
value;&"
valueo;3;@;4@Ï;i;5[ ;6"1;iþ;iþo;
;@;["Q/* ---------------------------------------------------------------------- */;;;	[ ;io;
;@;[",/* $value: united number (eg: 100px) */;;;	[ ;io;7;@;"flex-basis;!0;T;	[o;
;@;["e/* There is no @box version of this property
 * There is no @flexbox version of this property */;;;	[ ;io;8;#{ ;@;"experimental;!o;%	;{ ;"flex-support;&"flex_support;i
;	[ ;$[o;	;@;"flex-basis;;;i
o;%	;@;"
value;&"
value;i
;i
;$[[o;%;@;"
value;&"
valueo;	;@;"	auto;;;i;io;
;@;["Q/* ---------------------------------------------------------------------- */;;;	[ ;io;
;@;["£/* Align items along the "cross axis" -- overrides `align-items` value on individual items
 * $value: auto | flex-start | flex-end | center | baseline | stretch */;;;	[ ;io;7;@;"align-self;!0;T;	[o;
;@;["S/* children of flex containers
 * There is no @box version of this property */;;;	[ ;io;8;#{ ;@;"experimental;!o;%	;{ ;"flexbox-support;&"flexbox_support;i;	[ ;$[o;	;@;"flex-item-align;;;io;";#{ ;@;"flex-translate-value;!0;$[o;%	;@;"
value;&"
value;io;	;@;"flexbox;;;i;i;io;8;#{ ;@;"experimental;!o;%	;{ ;"flex-support;&"flex_support;i;	[ ;$[o;	;@;"align-self;;;io;%	;@;"
value;&"
value;i;i;$[[o;%;@;"
value;&"
valueo;	;@;"	auto;;;i;io;
;@;["Q/* ---------------------------------------------------------------------- */;;;	[ ;io;
;@;["/* $value: Integer */;;;	[ ;io;7;@;"
order;!0;T;	[u;'[o:Sass::Script::Operation
:@operator:and:@operand2o:!Sass::Script::UnaryOperation	;:not:@options{ :@operando:Sass::Script::Variable	;@:
@name"	wrap:@underscored_name"	wrap:
@linei;i;@:@operand1o;	;@;"legacy;"legacy;i;i0[o:Sass::Tree::MixinNode:@keywords{ ;@;"legacy-order:@splat0:@children[ :
@args[o;	;@;"
value;"
value;i;io;8;#{ ;@;"experimental;!o;%	;{ ;"flexbox-support;&"flexbox_support;i;	[ ;$[o;	;@;"flex-order;;;io;%	;@;"
value;&"
value;i;io;8;#{ ;@;"experimental;!o;%	;{ ;"flex-support;&"flex_support;i ;	[ ;$[o;	;@;"
order;;;i o;%	;@;"
value;&"
value;i ;i ;$[[o;%;@;"
value;&"
valueo;3;@;4@Ï;i ;5[ ;6"0;i[o;%;@;"	wrap;&"	wrapo;%	;@;"flex-wrap-required;&"flex_wrap_required;i[o;%;@;"legacy;&"legacyo;%	;@;"flex-legacy-enabled;&"flex_legacy_enabled;i;io;7;@;"legacy-order;!0;T;	[o;
;@;["T/* the @box spec starts the ordering at 1 instead of 0 like the modern specs */;;;	[ ;i$o;8;#{ ;@;"experimental;!o;%	;{ ;"box-support;&"box_support;i%;	[ ;$[o;	;@;"box-ordinal-group;;;i%o;.
;:	plus;0o;3;@;4@Ï;i;5[ ;6"1;i%;@;1o;%	;@;"
value;&"
value;i%;i%;i%;$[[o;%;@;"
value;&"
valueo;3;@;4@Ï;i ;5[ ;6"0;i#;i#;i